/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caesercipher.gui;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JRadioButton;
import javax.swing.JSlider;
import javax.swing.filechooser.FileNameExtensionFilter;
import services.Decoder;
import services.Encoder;

/**
 *
 * @author wani
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    public App() {
        initComponents();
        decryptedShiftValue.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        appContainer = new javax.swing.JPanel();
        appVersion = new javax.swing.JLabel();
        AttachButton = new javax.swing.JButton();
        pathValueText = new javax.swing.JTextField();
        processSelector = new javax.swing.JRadioButton();
        encodeContainer = new javax.swing.JPanel();
        shiftLabel = new javax.swing.JLabel();
        shiftSlider = new javax.swing.JSlider();
        shiftValueText = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        decryptedShiftValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appVersion.setText("Caeser Cracker 0.0.1");

        AttachButton.setText("Browse");
        AttachButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttachButtonActionPerformed(evt);
            }
        });

        pathValueText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathValueTextActionPerformed(evt);
            }
        });

        processSelector.setSelected(true);
        processSelector.setText("Encode / Decode ");
        processSelector.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                processSelectorStateChanged(evt);
            }
        });
        processSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processSelectorActionPerformed(evt);
            }
        });

        shiftLabel.setLabelFor(shiftSlider);
        shiftLabel.setText("Shift Value");

        shiftSlider.setMaximum(26);
        shiftSlider.setMinimum(1);
        shiftSlider.setValue(1);
        shiftSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                shiftSliderStateChanged(evt);
            }
        });
        shiftSlider.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                shiftSliderAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        shiftValueText.setEditable(false);
        shiftValueText.setText("1");
        shiftValueText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftValueTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout encodeContainerLayout = new javax.swing.GroupLayout(encodeContainer);
        encodeContainer.setLayout(encodeContainerLayout);
        encodeContainerLayout.setHorizontalGroup(
            encodeContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encodeContainerLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(shiftLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(shiftSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(shiftValueText)
                .addGap(20, 20, 20))
        );
        encodeContainerLayout.setVerticalGroup(
            encodeContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encodeContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(encodeContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shiftValueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(encodeContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(shiftLabel)
                        .addComponent(shiftSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        submit.setText("Encode");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout appContainerLayout = new javax.swing.GroupLayout(appContainer);
        appContainer.setLayout(appContainerLayout);
        appContainerLayout.setHorizontalGroup(
            appContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appContainerLayout.createSequentialGroup()
                .addGroup(appContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(appContainerLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(appContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(appContainerLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(pathValueText, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(AttachButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(appContainerLayout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(processSelector)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(encodeContainer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appContainerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        appContainerLayout.setVerticalGroup(
            appContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(appVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AttachButton)
                    .addComponent(pathValueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(processSelector)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(encodeContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(submit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(appContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(decryptedShiftValue)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(appContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(decryptedShiftValue)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pathValueTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathValueTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathValueTextActionPerformed

    private void AttachButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttachButtonActionPerformed
        // creating jchooser
        JFileChooser chooser = new JFileChooser();
        // specifing extensions
        FileNameExtensionFilter filter = new FileNameExtensionFilter("txt","txt");
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setFileFilter(filter);

        chooser.showOpenDialog(null);
        File plainText = chooser.getSelectedFile();
        // setting file path to a text field
        String filePath = plainText.getAbsolutePath();
        pathValueText.setText(filePath);
    }//GEN-LAST:event_AttachButtonActionPerformed

    private void shiftValueTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftValueTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shiftValueTextActionPerformed

    private void shiftSliderAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_shiftSliderAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_shiftSliderAncestorMoved

    private void shiftSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_shiftSliderStateChanged
        JSlider slider = (JSlider) evt.getSource();
        shiftValueText.setText(String.valueOf(slider.getValue()));
    }//GEN-LAST:event_shiftSliderStateChanged

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed

        try {
            if (processSelector.isSelected()) {
                Encoder en = new Encoder();
                en.encode(pathValueText.getText(), Integer.parseInt(shiftValueText.getText()));
            } else {
                Decoder de = new Decoder();
                decryptedShiftValue.setText(caeserutils.Messages.DECODER_MESSGE + String.valueOf(de.decode(pathValueText.getText())));
            }
        } catch (IOException ex) {
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void processSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processSelectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_processSelectorActionPerformed

    private void processSelectorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_processSelectorStateChanged
        JRadioButton jr = (JRadioButton) evt.getSource();
        if (jr.isSelected()) {
            encodeContainer.setVisible(true);
            decryptedShiftValue.setVisible(false);
            submit.setText(caeserutils.Status.ENCODE_PROCESS);
        } else {
            encodeContainer.setVisible(false);
            decryptedShiftValue.setVisible(true);
            submit.setText(caeserutils.Status.DECODE_PROCESS);

        }
    }//GEN-LAST:event_processSelectorStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AttachButton;
    private javax.swing.JPanel appContainer;
    private javax.swing.JLabel appVersion;
    private javax.swing.JLabel decryptedShiftValue;
    private javax.swing.JPanel encodeContainer;
    private javax.swing.JTextField pathValueText;
    private javax.swing.JRadioButton processSelector;
    private javax.swing.JLabel shiftLabel;
    private javax.swing.JSlider shiftSlider;
    private javax.swing.JTextField shiftValueText;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
